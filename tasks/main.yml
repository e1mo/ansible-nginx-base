---
- name: Gather OS specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version}}.yml"
    - "{{ ansible_distribution|lower }}.yml"
    - "{{ ansible_os_family|lower }}.yml"
  tags:
    - nginx-base
    - vars

- name: include install tasks
  include_tasks: "{{ item }}"
  with_first_found:
    - "install_{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version}}.yml"
    - "install_{{ ansible_distribution|lower }}.yml"
    - "install_{{ ansible_os_family|lower }}.yml"
  tags:
    - nginx-base
    - vars

- name: Make sure the nginx-sites directory exists
  file:
    path: "{{ nginx_sites_path }}"
    state: directory
    owner: root
  tags:
    - nginx-base

- name: Install basic nginx config
  template:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
  when: nginx_base_conf
  tags:
    - nginx-base
  notify:
    - Reload nginx
    - Verify nginxconfig

- name: Install basic nginx site config for letsencrypt/HTTPS
  template:
     src: nginx-base.conf
     dest: "{{ nginx_sites_path }}/base.conf"
  when: nginx_base_conf == true
  tags:
    - nginx-base
  notify:
    - Reload nginx
    - Verify nginxconfig

- name: Create dhparams
  command: "openssl dhparam -out {{ nginx_dhparams_path }} {{ nginx_dhparams_size }}"
  args:
    creates: "{{ nginx_dhparams_path }}"
  tags:
    - nginx-base
  notify:
    - Restart nginx

- name: Install ufw rule for HTTP and HTTPS
  copy:
    src: ufw-web
    dest: "{{ nginx_ufw_path }}/custom-web"
  notify:
    - Reload ufw
  tags:
    - nginx-base
    - ufw

- name: Ensure ufw allows web traffic
  ufw: 
    rule: allow
    name: web
  tags:
    - nginx-base
    - ufw

- name: Ensure that nginx is enabled and started
  service:
    name: nginx
    enabled: yes
    state: started
  tags:
    - nginx-base

- name: run handlers at this Point
  meta: flush_handlers
  tags:
    - common
    - network
